sudo: required
services:
    - docker
env:
    global:
        # this gets the SHA for the latest git commit, used for appending to docker builds. Without this the builds would be tagged
        # by default with "latest". K8s would think that nothing has changed so it wouldn't apply the new images.
        # with this env variable, the SHA can be appended instead of "latest"
        - SHA=$(git rev-parse HEAD)
        # disables gcloud prompts that require user input because there is no way to respond to them
        - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
    # got this from running "docker run -it -v ${pwd}:/app ruby:2.4 sh" --> "gem install travis" --> "travis" --> "travis encrypt-file service-account.json -r dmidye/multi-k8s"
    - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
    # Set up Google SDK inside the travis 'runner'
    - curl https://sdk.cloud.google.com | bash > /dev/null;
    - source $HOME/google-cloud-sdk/path.bash.inc
    # use google SDK to install and update kubectl
    - gcloud components update kubectl
    # need a google IAM service account
    - gcloud auth activate-service-account --key-file service-account.json
    # tell gcloud what zone and project (zones are like aws availability zones)
    - gcloud config set project clear-shell-288415
    - gcloud config set compute/zone us-central1-c
    # tell gcloud to work with a specific cluster that I created in my account
    - gcloud container clusters get-credentials multi-cluster
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t dpmidyett/react-test -f ./client/Dockerfile.dev ./client

script:
    - docker run -e CI=true dpmidyett/react-test npm test

deploy:
    # tell travis that we'll take care of the script, just run the commands you're told to run
    provider: script
    # This allows for creating a script outside of the travis.yml to build images, push to dockerhub, and apply k8s files
    script: bash ./deploy.sh
    on:
        branch: master
    


